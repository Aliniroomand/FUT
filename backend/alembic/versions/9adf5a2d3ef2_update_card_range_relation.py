"""Update card range relation

Revision ID: 9adf5a2d3ef2
Revises: 
Create Date: 2025-07-29 07:18:20.630336

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '9adf5a2d3ef2'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_admins_id'), table_name='admins')
    op.drop_table('admins')
    op.drop_index(op.f('ix_transfer_methods_id'), table_name='transfer_methods')
    op.drop_table('transfer_methods')
    op.drop_index(op.f('ix_card_ranges_id'), table_name='card_ranges')
    op.drop_table('card_ranges')
    op.drop_index(op.f('ix_transactions_id'), table_name='transactions')
    op.drop_table('transactions')
    op.drop_index(op.f('ix_admin_prices_id'), table_name='admin_prices')
    op.drop_table('admin_prices')
    op.drop_index(op.f('ix_playercards_id'), table_name='playercards')
    op.drop_table('playercards')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('playercards',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.Column('club', sa.VARCHAR(), nullable=True),
    sa.Column('position', sa.VARCHAR(), nullable=True),
    sa.Column('version', sa.VARCHAR(), nullable=False),
    sa.Column('rating', sa.VARCHAR(), nullable=False),
    sa.Column('chemistry', sa.INTEGER(), nullable=True),
    sa.Column('bid_price', sa.VARCHAR(), nullable=True),
    sa.Column('buy_now_price', sa.VARCHAR(), nullable=True),
    sa.Column('games_played', sa.INTEGER(), nullable=True),
    sa.Column('contract_number', sa.INTEGER(), nullable=True),
    sa.Column('owner_number', sa.INTEGER(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_playercards_id'), 'playercards', ['id'], unique=False)
    op.create_table('admin_prices',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('buy_price', sa.FLOAT(), nullable=False),
    sa.Column('sell_price', sa.FLOAT(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_admin_prices_id'), 'admin_prices', ['id'], unique=False)
    op.create_table('transactions',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('card_id', sa.INTEGER(), nullable=True),
    sa.Column('amount', sa.FLOAT(), nullable=False),
    sa.Column('transaction_type', sa.VARCHAR(), nullable=False),
    sa.Column('timestamp', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['card_id'], ['playercards.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_transactions_id'), 'transactions', ['id'], unique=False)
    op.create_table('card_ranges',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('min_value', sa.FLOAT(), nullable=False),
    sa.Column('max_value', sa.FLOAT(), nullable=False),
    sa.Column('description', sa.VARCHAR(), nullable=True),
    sa.Column('primary_card_id', sa.INTEGER(), nullable=True),
    sa.Column('fallback_card_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['fallback_card_id'], ['playercards.id'], ),
    sa.ForeignKeyConstraint(['primary_card_id'], ['playercards.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_card_ranges_id'), 'card_ranges', ['id'], unique=False)
    op.create_table('transfer_methods',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.Column('instructions', sa.VARCHAR(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_transfer_methods_id'), 'transfer_methods', ['id'], unique=False)
    op.create_table('admins',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('username', sa.VARCHAR(), nullable=False),
    sa.Column('password_hash', sa.VARCHAR(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_index(op.f('ix_admins_id'), 'admins', ['id'], unique=False)
    # ### end Alembic commands ###
