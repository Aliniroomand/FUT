"""add finding player price as price cache and transfer_tasks and alerts

Revision ID: b5eb2ecb9a89
Revises: e32241da9561
Create Date: 2025-09-02 08:07:35.864420

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision: str = 'b5eb2ecb9a89'
down_revision: Union[str, Sequence[str], None] = 'e32241da9561'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('transfer_tasks', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_transfer_tasks_id'))

    op.drop_table('transfer_tasks')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('transfer_tasks',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('ea_account_id', sa.INTEGER(), nullable=False),
    sa.Column('player_id', sa.VARCHAR(), nullable=False),
    sa.Column('max_price', sa.INTEGER(), nullable=False),
    sa.Column('status', sa.VARCHAR(length=10), nullable=False),
    sa.Column('attempts', sa.INTEGER(), nullable=False),
    sa.Column('last_error', sa.VARCHAR(), nullable=True),
    sa.Column('meta', sqlite.JSON(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['ea_account_id'], ['ea_accounts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('transfer_tasks', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_transfer_tasks_id'), ['id'], unique=False)

    # ### end Alembic commands ###
